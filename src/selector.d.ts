declare type option = {
    id: string;
    name: string;
};
declare type classParameters = {
    title?: string;
    options: option[];
    recentSelects?: option[];
    currentOptionId?: string;
    isSearchable?: boolean;
    searchPlaceholder?: string;
    maxColumns?: number;
    maxRows?: number;
    theme?: string;
    style?: object;
    onSelect: (id: string, name: string) => void;
    afterHide?: () => void;
};
declare class Selector {
    static readonly ROW_HEIGHT: number;
    static readonly COLUMN_WIDTH: number;
    protected viewID: number;
    protected view: HTMLElement;
    protected title: string;
    protected allOptions: option[];
    protected optionsToShow: option[];
    protected recentSelects: option[] | undefined;
    protected currentOptionId: string | undefined;
    protected isSearchable: boolean;
    protected searchPlaceholder: string;
    protected maxColumns: number;
    protected maxRows: number;
    protected rowsNumber: number;
    protected theme: string | undefined;
    protected style: object | undefined;
    protected onSelect: (id: string, name: string) => void;
    protected afterHide: (() => void) | undefined;
    constructor(parameters: classParameters);
    protected static appendCSS(): void;
    protected static generateViewID(): number;
    protected static getHtml(viewID: number): ChildNode;
    protected static getOptionButtonHtml(id: string, name: string, isSelected: boolean): ChildNode;
    protected static getColumnHtml(index: number): ChildNode;
    protected static getChildNode(html: string): ChildNode;
    setTitle(title: string): void;
    protected setSearchPlaceholder(sph: string): void;
    protected setupHeader(): void;
    protected showRecentSelects(): void;
    protected showAllOptions(neSizeCalc: boolean): void;
    protected fixTheWindow(): void;
    protected releaseTheWindow(): void;
    protected removeAllOptions(): void;
    protected calcRowsNumber(): number;
    protected calcMaxRows(): number;
    protected calcMaxColumns(): number;
    protected printColumns(): void;
    protected addEventToOptions(): void;
    protected show(): void;
    protected addEventToSearch(): void;
    protected addEventToClose(): void;
    protected hide(): void;
}
declare const Style = "\n\n";
